{"ast":null,"code":"var _jsxFileName = \"/home/nman/Documents/v5.2/src/components/sketch.jsx\";\nimport React, { Component } from 'react';\nimport p5 from 'p5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst init = (array, size, height) => {\n  for (let i = 0; i < size; i++) {\n    const temp = Math.floor(Math.random() * height) + 1;\n    if (array.indexOf(temp) === -1) array[i] = temp;\n  }\n};\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.Sketch = p => {\n      let c1, c2;\n\n      p.setup = () => {\n        p.createCanvas(this.props.canvas.width, this.props.canvas.height);\n        c1 = p.color('#A16BFE');\n        c2 = p.color('#DEB0DF');\n        p.noFill();\n\n        for (let i = 0; i < this.props.size; i++) {\n          let inter = p.map(i, 0, this.props.size, 0, 1);\n          let c = p.lerpColor(c1, c2, inter);\n          p.stroke(c);\n        }\n      };\n\n      p.draw = () => {\n        //p.background(0);\n        //console.log(colors)\n        for (var i = 0; i < this.props.size; i++) {\n          p.noStroke();\n          p.fill(155);\n          p.rect(i * this.props.shapeWidth, this.props.canvas.height - this.props.array[i], this.props.shapeWidth, this.props.array[i]);\n        }\n      };\n    };\n\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n    init(this.props.array, this.props.size, this.props.canvas.height);\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.props.shapeWidth !== props.shapeWidth) {\n      this.myP5.remove();\n      init(this.props.array, this.props.size, this.props.canvas.height);\n      this.myP5 = new p5(this.Sketch, this.myRef.current);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.myRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/home/nman/Documents/v5.2/src/components/sketch.jsx"],"names":["React","Component","p5","init","array","size","height","i","temp","Math","floor","random","indexOf","Canvas","constructor","props","Sketch","p","c1","c2","setup","createCanvas","canvas","width","color","noFill","inter","map","c","lerpColor","stroke","draw","noStroke","fill","rect","shapeWidth","myRef","createRef","componentDidMount","myP5","current","componentWillReceiveProps","remove","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport p5 from 'p5';\n\n\nconst init = (array, size, height) => {\n    for (let i = 0; i < size; i++) {\n        const temp = Math.floor(Math.random() * height) + 1;\n        if (array.indexOf(temp) === -1)\n            array[i] = temp;\n    }\n}\n\nclass Canvas extends Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n    Sketch = (p) => {\n        let c1, c2;\n        p.setup = () => {\n            p.createCanvas(this.props.canvas.width, this.props.canvas.height);\n            c1 = p.color('#A16BFE');\n            c2 = p.color('#DEB0DF');\n            p.noFill();\n            for (let i = 0; i < this.props.size; i++) {\n                let inter = p.map(i, 0, this.props.size, 0, 1);\n                let c = p.lerpColor(c1, c2, inter);\n                p.stroke(c);\n            }\n        }\n\n        p.draw = () => {\n            //p.background(0);\n\n            //console.log(colors)\n            for (var i = 0; i < this.props.size; i++) {\n                p.noStroke();\n                p.fill(155);\n                p.rect(i * this.props.shapeWidth,\n                    this.props.canvas.height - this.props.array[i],\n                    this.props.shapeWidth, this.props.array[i]\n                );\n            }\n\n        }\n    }\n\n    componentDidMount() {\n        this.myP5 = new p5(this.Sketch, this.myRef.current);\n        init(\n            this.props.array,\n            this.props.size,\n            this.props.canvas.height\n        );\n\n    }\n    componentWillReceiveProps(props) {\n        if (this.props.shapeWidth !== props.shapeWidth) {\n            this.myP5.remove();\n\n            init(\n                this.props.array,\n                this.props.size,\n                this.props.canvas.height\n            );\n            this.myP5 = new p5(this.Sketch, this.myRef.current);\n        }\n    }\n    render() {\n        return <div ref={this.myRef} />\n    }\n}\n\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}