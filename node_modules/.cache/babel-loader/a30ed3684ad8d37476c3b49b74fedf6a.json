{"ast":null,"code":"import _regeneratorRuntime from\"/home/nman/Documents/SortAlgoWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/nman/Documents/SortAlgoWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{stop,swap}from\"../components/utilities\";import{isArrayReset}from\"../components/menu\";export default function cocktail(_x,_x2,_x3,_x4){return _cocktail.apply(this,arguments);}function _cocktail(){_cocktail=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,colors,size,ms){var swapped,start,end,i,_i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:swapped=true;start=0;end=size-1;case 3:if(!swapped){_context.next=46;break;}swapped=false;i=start;case 6:if(!(i<end)){_context.next=21;break;}colors[i]=1;if(!(values[i]>values[i+1])){_context.next=17;break;}if(!isArrayReset){_context.next=12;break;}colors.fill(0);return _context.abrupt(\"return\");case 12:_context.next=14;return stop();case 14:_context.next=16;return swap(values,i,i+1,ms);case 16:swapped=true;case 17:colors[i]=0;case 18:++i;_context.next=6;break;case 21:if(swapped){_context.next=23;break;}return _context.abrupt(\"break\",46);case 23:swapped=false;colors[end]=2;end-=1;_i=end-1;case 27:if(!(_i>=start)){_context.next=42;break;}colors[_i]=1;if(!(values[_i]>values[_i+1])){_context.next=38;break;}if(!isArrayReset){_context.next=33;break;}colors.fill(0);return _context.abrupt(\"return\");case 33:_context.next=35;return stop();case 35:_context.next=37;return swap(values,_i,_i+1,ms);case 37:swapped=true;case 38:colors[_i]=0;case 39:--_i;_context.next=27;break;case 42:colors[start]=2;start+=1;_context.next=3;break;case 46:colors.fill(2);return _context.abrupt(\"return\",values);case 48:case\"end\":return _context.stop();}}},_callee);}));return _cocktail.apply(this,arguments);}","map":{"version":3,"sources":["/home/nman/Documents/SortAlgoWebsite/src/sorting-algorithms/cocktail.js"],"names":["stop","swap","isArrayReset","cocktail","values","colors","size","ms","swapped","start","end","i","fill"],"mappings":"mTAAA,OAASA,IAAT,CAAeC,IAAf,KAA2B,yBAA3B,CACA,OAASC,YAAT,KAA6B,oBAA7B,CAGA,uBAA8BC,CAAAA,QAA9B,yD,uFAAe,iBAAwBC,MAAxB,CAA+BC,MAA/B,CAAuCC,IAAvC,CAA6CC,EAA7C,6IACPC,OADO,CACG,IADH,CAEPC,KAFO,CAEC,CAFD,CAGPC,GAHO,CAGDJ,IAAI,CAAG,CAHN,YAIJE,OAJI,0BAKPA,OAAO,CAAG,KAAV,CACSG,CANF,CAMMF,KANN,aAMaE,CAAC,CAAGD,GANjB,2BAOHL,MAAM,CAACM,CAAD,CAAN,CAAY,CAAZ,CAPG,KAQCP,MAAM,CAACO,CAAD,CAAN,CAAYP,MAAM,CAACO,CAAC,CAAG,CAAL,CARnB,+BASKT,YATL,0BAWKG,MAAM,CAACO,IAAP,CAAY,CAAZ,EAXL,gEAcOZ,CAAAA,IAAI,EAdX,gCAeOC,CAAAA,IAAI,CAACG,MAAD,CAASO,CAAT,CAAYA,CAAC,CAAG,CAAhB,CAAmBJ,EAAnB,CAfX,SAgBCC,OAAO,CAAG,IAAV,CAhBD,QAkBHH,MAAM,CAACM,CAAD,CAAN,CAAY,CAAZ,CAlBG,QAMsB,EAAEA,CANxB,kCAoBFH,OApBE,qEAsBPA,OAAO,CAAG,KAAV,CACAH,MAAM,CAACK,GAAD,CAAN,CAAc,CAAd,CACAA,GAAG,EAAI,CAAP,CACSC,EAzBF,CAyBMD,GAAG,CAAG,CAzBZ,cAyBeC,EAAC,EAAIF,KAzBpB,2BA0BHJ,MAAM,CAACM,EAAD,CAAN,CAAY,CAAZ,CA1BG,KA2BCP,MAAM,CAACO,EAAD,CAAN,CAAYP,MAAM,CAACO,EAAC,CAAG,CAAL,CA3BnB,+BA4BKT,YA5BL,0BA8BKG,MAAM,CAACO,IAAP,CAAY,CAAZ,EA9BL,gEAiCOZ,CAAAA,IAAI,EAjCX,gCAkCOC,CAAAA,IAAI,CAACG,MAAD,CAASO,EAAT,CAAYA,EAAC,CAAG,CAAhB,CAAmBJ,EAAnB,CAlCX,SAmCCC,OAAO,CAAG,IAAV,CAnCD,QAqCHH,MAAM,CAACM,EAAD,CAAN,CAAY,CAAZ,CArCG,QAyB2B,EAAEA,EAzB7B,gCAuCPN,MAAM,CAACI,KAAD,CAAN,CAAgB,CAAhB,CACAA,KAAK,EAAI,CAAT,CAxCO,8BA0CXJ,MAAM,CAACO,IAAP,CAAY,CAAZ,EA1CW,gCA4CJR,MA5CI,yD","sourcesContent":["import { stop, swap } from \"../components/utilities\";\nimport { isArrayReset } from \"../components/menu\";\n\n\nexport default async function cocktail(values,colors, size, ms) {\n    let swapped = true;\n    let start = 0;\n    let end = size - 1;\n    while (swapped) {\n        swapped = false;\n        for (let i = start; i < end; ++i) {\n            colors[i] = 1;\n            if (values[i] > values[i + 1]) {\n                if (isArrayReset)\n                {\n                    colors.fill(0);\n                    return;\n                }\n                await stop();\n                await swap(values, i, i + 1, ms);\n                swapped = true;\n            }\n            colors[i] = 0;\n        }\n        if (!swapped)\n            break;\n        swapped = false;\n        colors[end] = 2;\n        end -= 1;\n        for (let i = end - 1; i >= start; --i) {\n            colors[i] = 1;\n            if (values[i] > values[i + 1]) {\n                if (isArrayReset)\n                {\n                    colors.fill(0);\n                    return;\n                }\n                await stop();\n                await swap(values, i, i + 1, ms);\n                swapped = true;\n            }\n            colors[i] = 0;\n        }\n        colors[start] = 2;\n        start += 1;\n    }\n    colors.fill(2);\n\n    return values;\n}"]},"metadata":{},"sourceType":"module"}