{"ast":null,"code":"var _jsxFileName = \"/home/nman/Documents/v5.2/src/components/sketch.jsx\";\nimport React from 'react';\nimport * as p5 from 'p5';\nimport { init } from '../utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Sketch = p => {\n      let startPoint;\n      let c1, c2;\n\n      p.setup = () => {\n        p.createCanvas(this.props.canvas.width, this.props.canvas.height); //p.rectMode(p.CENTER);\n\n        startPoint = this.props.canvas.width / 2 - this.props.size / 2 * this.props.shapeWidth;\n        c1 = p.color('#A16BFE');\n        c2 = p.color('#DEB0DF');\n      };\n\n      p.draw = () => {\n        const BLACK = \"#000000\";\n        const WHITE = \"#ffffff\";\n        const RED = \"#ff4d4d\";\n        let temp = startPoint + this.props.shapeWidth / 2;\n        p.noFill();\n\n        for (var y = 0; y < this.props.canvas.width; y++) {\n          var inter = p.map(y, 0, this.props.canvas.width, 0, 1);\n          var c = p.lerpColor(c1, c2, inter);\n          p.stroke(c);\n          p.line(y, 0, y, this.props.canvas.width);\n        }\n\n        for (let i = 0; i < this.props.size; i++) {\n          p.noStroke();\n          p.fill(WHITE);\n          if (this.props.colorStates[i] === 2) p.fill(RED);\n          /*p.rect(\n              temp,\n              0,\n              10,\n              this.props.array[i] + this.props.canvas.height / 2);\n              temp = temp + 10;*/\n\n          p.rect(i * this.props.shapeWidth, this.props.canvas.height - this.props.array[i], this.props.shapeWidth, this.props.array[i]);\n        }\n\n        p.fill(123);\n        p.rect(startPoint, this.props.canvas.height / 2, 2, 2000);\n        p.rect(temp + this.props.shapeWidth / 2, this.props.canvas.height / 2, 2, 2000); //rect(x, y, w, h,)\n\n        p.fill(0);\n        p.rect(0, //this.props.canvas.width / 4,\n        100, 20, //this.props.canvas.width / 2,\n        20);\n        p.rect(this.props.canvas.width / 2 - 500, //this.props.canvas.width / 4,\n        this.props.canvas.height / 2, 20, //this.props.canvas.width / 2,\n        20);\n        p.fill(RED);\n        p.rect(this.props.canvas.width / 4, //this.props.canvas.width / 4,\n        this.props.canvas.height / 2, this.props.canvas.width / 2 - 500, //this.props.canvas.width / 2,\n        20); //center point \n\n        p.fill(50);\n        p.rect(this.props.canvas.width / 2, this.props.canvas.height / 2, 2, 1000);\n        p.rect(this.props.canvas.width / 2, this.props.canvas.height / 2, 1000, 2);\n      };\n    };\n\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n    init(this.props.array, this.props.colorStates, this.props.size, this.props.canvas.height);\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.props.size !== props.size) {\n      this.myP5.remove();\n      this.myP5 = new p5(this.Sketch, this.myRef.current);\n      init(this.props.array, this.props.colorStates, this.props.size, this.props.canvas.height);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.myRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/home/nman/Documents/v5.2/src/components/sketch.jsx"],"names":["React","p5","init","Canvas","Component","constructor","props","Sketch","p","startPoint","c1","c2","setup","createCanvas","canvas","width","height","size","shapeWidth","color","draw","BLACK","WHITE","RED","temp","noFill","y","inter","map","c","lerpColor","stroke","line","i","noStroke","fill","colorStates","rect","array","myRef","createRef","componentDidMount","myP5","current","componentWillReceiveProps","remove","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as p5 from 'p5';\nimport { init } from '../utilities';\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    Sketch = (p) => {\n        let startPoint;\n        let c1, c2;\n        p.setup = () => {\n            p.createCanvas(this.props.canvas.width, this.props.canvas.height);\n            //p.rectMode(p.CENTER);\n            startPoint = \n                this.props.canvas.width / 2 - ((this.props.size / 2) * this.props.shapeWidth);\n            \n            c1 = p.color('#A16BFE');\n            c2 = p.color('#DEB0DF');\n        }\n\n        p.draw = () => {\n            const BLACK = \"#000000\";\n            const WHITE = \"#ffffff\";\n            const RED = \"#ff4d4d\";\n            let temp = startPoint + this.props.shapeWidth / 2;\n            p.noFill();\n            for (var y = 0; y < this.props.canvas.width; y++) {\n                var inter = p.map(y, 0, this.props.canvas.width, 0, 1);\n                var c = p.lerpColor(c1, c2, inter);\n                p.stroke(c);\n                p.line(y, 0, y, this.props.canvas.width);\n            }\n\n            for (let i = 0; i < this.props.size; i++) {\n                p.noStroke();\n                p.fill(WHITE);\n                if(this.props.colorStates[i] === 2)\n                    p.fill(RED)\n                /*p.rect(\n                    temp,\n                    0,\n                    10,\n                    this.props.array[i] + this.props.canvas.height / 2);\n                    temp = temp + 10;*/\n                p.rect(i * this.props.shapeWidth, \n                        this.props.canvas.height - this.props.array[i], \n                        this.props.shapeWidth, this.props.array[i]\n                );\n            }\n            p.fill(123);\n            p.rect(\n                startPoint,\n                this.props.canvas.height / 2,\n                2,\n                2000);\n            p.rect(\n                temp + this.props.shapeWidth / 2,\n                this.props.canvas.height / 2,\n                2,\n                2000);\n            //rect(x, y, w, h,)\n            p.fill(0);\n            p.rect(\n                0,//this.props.canvas.width / 4,\n                100,\n                20,//this.props.canvas.width / 2,\n                20);\n\n            p.rect(\n                this.props.canvas.width / 2 - 500,//this.props.canvas.width / 4,\n                this.props.canvas.height / 2,\n                20,//this.props.canvas.width / 2,\n                20);\n            p.fill(RED);\n            p.rect(\n                this.props.canvas.width / 4,//this.props.canvas.width / 4,\n                this.props.canvas.height / 2,\n                this.props.canvas.width / 2 - 500,//this.props.canvas.width / 2,\n                20);\n            //center point \n            p.fill(50);\n            p.rect(this.props.canvas.width / 2, this.props.canvas.height / 2, 2, 1000);\n            p.rect(this.props.canvas.width / 2, this.props.canvas.height / 2, 1000, 2);\n        }\n    }\n\n    componentDidMount() {\n        this.myP5 = new p5(this.Sketch, this.myRef.current);\n        init(\n            this.props.array,\n            this.props.colorStates,\n            this.props.size,\n            this.props.canvas.height\n        );\n    }\n    componentWillReceiveProps(props) {\n        if (this.props.size !== props.size) {\n            this.myP5.remove();\n            this.myP5 = new p5(this.Sketch, this.myRef.current);\n            init(\n                this.props.array,\n                this.props.colorStates,\n                this.props.size,\n                this.props.canvas.height\n            );\n        }\n\n    }\n\n    render() {\n        return <div ref={this.myRef} />\n    }\n}\nexport default Canvas;\n\n"]},"metadata":{},"sourceType":"module"}