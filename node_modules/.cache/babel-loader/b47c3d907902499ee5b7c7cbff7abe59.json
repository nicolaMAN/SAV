{"ast":null,"code":"import { stop, swap } from \"../components/utilities\";\nimport { isArrayReset } from \"../components/controlMenu\";\nexport default async function bubble(values, colors, size, ms) {\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size - 1 - i; j++) {\n      if (isArrayReset) {\n        colors.fill(0);\n        return;\n      }\n\n      colors[j] = 1;\n      await stop();\n\n      if (values[j] > values[j + 1]) {\n        await swap(values, j, j + 1, ms);\n      }\n\n      colors[j + 1] = 2;\n      colors[j] = 0;\n    }\n  }\n\n  colors.fill(2);\n  return values;\n}","map":{"version":3,"sources":["/home/nman/Documents/v5.2/src/sorting-algorithms/bubble.js"],"names":["stop","swap","isArrayReset","bubble","values","colors","size","ms","i","j","fill"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,yBAA3B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,eAAe,eAAeC,MAAf,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4CC,EAA5C,EAAgD;AAC3D,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAApB,EAA0BE,CAAC,EAA3B,EAA+B;AAC3B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,GAAG,CAAP,GAAWE,CAA/B,EAAkCC,CAAC,EAAnC,EAAuC;AACnC,UAAIP,YAAJ,EACA;AACIG,QAAAA,MAAM,CAACK,IAAP,CAAY,CAAZ;AACA;AACH;;AACDL,MAAAA,MAAM,CAACI,CAAD,CAAN,GAAY,CAAZ;AACA,YAAMT,IAAI,EAAV;;AACA,UAAII,MAAM,CAACK,CAAD,CAAN,GAAYL,MAAM,CAACK,CAAC,GAAG,CAAL,CAAtB,EAA+B;AAC3B,cAAMR,IAAI,CAACG,MAAD,EAASK,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBF,EAAnB,CAAV;AACH;;AACDF,MAAAA,MAAM,CAACI,CAAC,GAAG,CAAL,CAAN,GAAgB,CAAhB;AACAJ,MAAAA,MAAM,CAACI,CAAD,CAAN,GAAY,CAAZ;AACH;AACJ;;AACDJ,EAAAA,MAAM,CAACK,IAAP,CAAY,CAAZ;AACA,SAAON,MAAP;AACH","sourcesContent":["import { stop, swap } from \"../components/utilities\";\nimport { isArrayReset } from \"../components/controlMenu\";\n\nexport default async function bubble(values, colors, size, ms) {\n    for (let i = 0; i < size; i++) {\n        for (let j = 0; j < size - 1 - i; j++) {\n            if (isArrayReset)\n            {\n                colors.fill(0);\n                return;\n            }\n            colors[j] = 1;\n            await stop();\n            if (values[j] > values[j + 1]) {\n                await swap(values, j, j + 1, ms);\n            }\n            colors[j + 1] = 2;\n            colors[j] = 0;\n        }\n    }\n    colors.fill(2);\n    return values;\n}\n"]},"metadata":{},"sourceType":"module"}