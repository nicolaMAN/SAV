{"ast":null,"code":"import { stop, swap } from \"../components/utilities\";\nimport { isArrayReset } from \"../components/menu\";\nexport default async function cocktail(values, colors, size, ms) {\n  let swapped = true;\n  let start = 0;\n  let end = size - 1;\n\n  while (swapped) {\n    swapped = false;\n\n    for (let i = start; i < end; ++i) {\n      colors[i] = 1;\n\n      if (values[i] > values[i + 1]) {\n        if (isArrayReset) {\n          colors.fill(0);\n          return;\n        }\n\n        await stop();\n        await swap(values, i, i + 1, ms);\n        swapped = true;\n      }\n\n      colors[i] = 0;\n    }\n\n    if (!swapped) break;\n    swapped = false;\n    colors[end] = 2;\n    end -= 1;\n\n    for (let i = end - 1; i >= start; --i) {\n      colors[i] = 1;\n\n      if (values[i] > values[i + 1]) {\n        if (isArrayReset) {\n          colors.fill(0);\n          return;\n        }\n\n        await stop();\n        await swap(values, i, i + 1, ms);\n        swapped = true;\n      }\n\n      colors[i] = 0;\n    }\n\n    colors[start] = 2;\n    start += 1;\n  }\n\n  colors.fill(2);\n  return values;\n}","map":{"version":3,"sources":["/home/nman/Documents/v5.2/src/sorting-algorithms/cocktail.js"],"names":["stop","swap","isArrayReset","cocktail","values","colors","size","ms","swapped","start","end","i","fill"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,yBAA3B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAGA,eAAe,eAAeC,QAAf,CAAwBC,MAAxB,EAA+BC,MAA/B,EAAuCC,IAAvC,EAA6CC,EAA7C,EAAiD;AAC5D,MAAIC,OAAO,GAAG,IAAd;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,GAAG,GAAGJ,IAAI,GAAG,CAAjB;;AACA,SAAOE,OAAP,EAAgB;AACZA,IAAAA,OAAO,GAAG,KAAV;;AACA,SAAK,IAAIG,CAAC,GAAGF,KAAb,EAAoBE,CAAC,GAAGD,GAAxB,EAA6B,EAAEC,CAA/B,EAAkC;AAC9BN,MAAAA,MAAM,CAACM,CAAD,CAAN,GAAY,CAAZ;;AACA,UAAIP,MAAM,CAACO,CAAD,CAAN,GAAYP,MAAM,CAACO,CAAC,GAAG,CAAL,CAAtB,EAA+B;AAC3B,YAAIT,YAAJ,EACA;AACIG,UAAAA,MAAM,CAACO,IAAP,CAAY,CAAZ;AACA;AACH;;AACD,cAAMZ,IAAI,EAAV;AACA,cAAMC,IAAI,CAACG,MAAD,EAASO,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBJ,EAAnB,CAAV;AACAC,QAAAA,OAAO,GAAG,IAAV;AACH;;AACDH,MAAAA,MAAM,CAACM,CAAD,CAAN,GAAY,CAAZ;AACH;;AACD,QAAI,CAACH,OAAL,EACI;AACJA,IAAAA,OAAO,GAAG,KAAV;AACAH,IAAAA,MAAM,CAACK,GAAD,CAAN,GAAc,CAAd;AACAA,IAAAA,GAAG,IAAI,CAAP;;AACA,SAAK,IAAIC,CAAC,GAAGD,GAAG,GAAG,CAAnB,EAAsBC,CAAC,IAAIF,KAA3B,EAAkC,EAAEE,CAApC,EAAuC;AACnCN,MAAAA,MAAM,CAACM,CAAD,CAAN,GAAY,CAAZ;;AACA,UAAIP,MAAM,CAACO,CAAD,CAAN,GAAYP,MAAM,CAACO,CAAC,GAAG,CAAL,CAAtB,EAA+B;AAC3B,YAAIT,YAAJ,EACA;AACIG,UAAAA,MAAM,CAACO,IAAP,CAAY,CAAZ;AACA;AACH;;AACD,cAAMZ,IAAI,EAAV;AACA,cAAMC,IAAI,CAACG,MAAD,EAASO,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBJ,EAAnB,CAAV;AACAC,QAAAA,OAAO,GAAG,IAAV;AACH;;AACDH,MAAAA,MAAM,CAACM,CAAD,CAAN,GAAY,CAAZ;AACH;;AACDN,IAAAA,MAAM,CAACI,KAAD,CAAN,GAAgB,CAAhB;AACAA,IAAAA,KAAK,IAAI,CAAT;AACH;;AACDJ,EAAAA,MAAM,CAACO,IAAP,CAAY,CAAZ;AAEA,SAAOR,MAAP;AACH","sourcesContent":["import { stop, swap } from \"../components/utilities\";\nimport { isArrayReset } from \"../components/menu\";\n\n\nexport default async function cocktail(values,colors, size, ms) {\n    let swapped = true;\n    let start = 0;\n    let end = size - 1;\n    while (swapped) {\n        swapped = false;\n        for (let i = start; i < end; ++i) {\n            colors[i] = 1;\n            if (values[i] > values[i + 1]) {\n                if (isArrayReset)\n                {\n                    colors.fill(0);\n                    return;\n                }\n                await stop();\n                await swap(values, i, i + 1, ms);\n                swapped = true;\n            }\n            colors[i] = 0;\n        }\n        if (!swapped)\n            break;\n        swapped = false;\n        colors[end] = 2;\n        end -= 1;\n        for (let i = end - 1; i >= start; --i) {\n            colors[i] = 1;\n            if (values[i] > values[i + 1]) {\n                if (isArrayReset)\n                {\n                    colors.fill(0);\n                    return;\n                }\n                await stop();\n                await swap(values, i, i + 1, ms);\n                swapped = true;\n            }\n            colors[i] = 0;\n        }\n        colors[start] = 2;\n        start += 1;\n    }\n    colors.fill(2);\n\n    return values;\n}"]},"metadata":{},"sourceType":"module"}