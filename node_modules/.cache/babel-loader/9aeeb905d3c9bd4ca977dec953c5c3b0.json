{"ast":null,"code":"var _jsxFileName = \"/home/nman/Documents/v5.2/src/components/sketch.jsx\";\nimport React from 'react';\nimport 'p5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Sketch = p => {\n      let color1;\n      let color2;\n\n      p.setup = () => {\n        p.createCanvas(this.props.canvas.width, this.props.canvas.height);\n        color1 = p.color('#A16BFE');\n        color2 = p.color('#DEB0DF');\n      };\n\n      p.draw = () => {\n        for (let i = 0; i < this.props.size; i++) {\n          p.noStroke();\n          p.fill(0);\n          p.rect(i * this.props.shapeWidth, this.props.canvas.height - this.props.array[i], this.props.shapeWidth, this.props.array[i]);\n        }\n      };\n    };\n\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n    init();\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.props.size !== props.size) {\n      this.myP5.remove();\n      this.myP5 = new p5(this.Sketch, this.myRef.current);\n      init(this.props.array, this.props.size, this.props.canvas.height);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.myRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nfunction init() {\n  for (let i = 0; i < this.props.size; i++) {\n    this.props.array[i] = Math.floor(Math.random() * (this.props.height - 100 + 1)) + 100;\n  }\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/home/nman/Documents/v5.2/src/components/sketch.jsx"],"names":["React","Canvas","Component","constructor","props","Sketch","p","color1","color2","setup","createCanvas","canvas","width","height","color","draw","i","size","noStroke","fill","rect","shapeWidth","array","myRef","createRef","componentDidMount","myP5","p5","current","init","componentWillReceiveProps","remove","render","Math","floor","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAP;;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAInBC,MAJmB,GAITC,CAAD,IAAO;AACZ,UAAIC,MAAJ;AACA,UAAIC,MAAJ;;AACAF,MAAAA,CAAC,CAACG,KAAF,GAAU,MAAM;AACZH,QAAAA,CAAC,CAACI,YAAF,CAAe,KAAKN,KAAL,CAAWO,MAAX,CAAkBC,KAAjC,EAAwC,KAAKR,KAAL,CAAWO,MAAX,CAAkBE,MAA1D;AACAN,QAAAA,MAAM,GAAGD,CAAC,CAACQ,KAAF,CAAQ,SAAR,CAAT;AACAN,QAAAA,MAAM,GAAGF,CAAC,CAACQ,KAAF,CAAQ,SAAR,CAAT;AACH,OAJD;;AAKAR,MAAAA,CAAC,CAACS,IAAF,GAAS,MAAM;AACX,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKZ,KAAL,CAAWa,IAA/B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCV,UAAAA,CAAC,CAACY,QAAF;AACAZ,UAAAA,CAAC,CAACa,IAAF,CAAO,CAAP;AACAb,UAAAA,CAAC,CAACc,IAAF,CAAOJ,CAAC,GAAG,KAAKZ,KAAL,CAAWiB,UAAtB,EACI,KAAKjB,KAAL,CAAWO,MAAX,CAAkBE,MAAlB,GAA2B,KAAKT,KAAL,CAAWkB,KAAX,CAAiBN,CAAjB,CAD/B,EAEI,KAAKZ,KAAL,CAAWiB,UAFf,EAE2B,KAAKjB,KAAL,CAAWkB,KAAX,CAAiBN,CAAjB,CAF3B;AAIH;AACJ,OATD;AAUH,KAtBkB;;AAEf,SAAKO,KAAL,gBAAavB,KAAK,CAACwB,SAAN,EAAb;AACH;;AAoBDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,IAAL,GAAY,IAAIC,EAAJ,CAAO,KAAKtB,MAAZ,EAAoB,KAAKkB,KAAL,CAAWK,OAA/B,CAAZ;AACAC,IAAAA,IAAI;AACP;;AACDC,EAAAA,yBAAyB,CAAC1B,KAAD,EAAQ;AAC7B,QAAI,KAAKA,KAAL,CAAWa,IAAX,KAAoBb,KAAK,CAACa,IAA9B,EAAoC;AAChC,WAAKS,IAAL,CAAUK,MAAV;AACA,WAAKL,IAAL,GAAY,IAAIC,EAAJ,CAAO,KAAKtB,MAAZ,EAAoB,KAAKkB,KAAL,CAAWK,OAA/B,CAAZ;AACAC,MAAAA,IAAI,CACA,KAAKzB,KAAL,CAAWkB,KADX,EAEA,KAAKlB,KAAL,CAAWa,IAFX,EAGA,KAAKb,KAAL,CAAWO,MAAX,CAAkBE,MAHlB,CAAJ;AAKH;AACJ;;AACDmB,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,GAAG,EAAE,KAAKT;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAzCgC;;AA4CrC,SAASM,IAAT,GAAgB;AACZ,OAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKZ,KAAL,CAAWa,IAA/B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,SAAKZ,KAAL,CAAWkB,KAAX,CAAiBN,CAAjB,IAAsBiB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAK/B,KAAL,CAAWS,MAAX,GAAoB,GAApB,GAA0B,CAA3C,CAAX,IAA4D,GAAlF;AACH;AACJ;;AACD,eAAeZ,MAAf","sourcesContent":["import React from 'react';\nimport 'p5';\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n    Sketch = (p) => {\n        let color1;\n        let color2;\n        p.setup = () => {\n            p.createCanvas(this.props.canvas.width, this.props.canvas.height);\n            color1 = p.color('#A16BFE');\n            color2 = p.color('#DEB0DF');\n        }\n        p.draw = () => {\n            for (let i = 0; i < this.props.size; i++) {\n                p.noStroke();\n                p.fill(0);\n                p.rect(i * this.props.shapeWidth,\n                    this.props.canvas.height - this.props.array[i],\n                    this.props.shapeWidth, this.props.array[i]\n                );\n            }\n        }\n    }\n    componentDidMount() {\n        this.myP5 = new p5(this.Sketch, this.myRef.current);\n        init();\n    }\n    componentWillReceiveProps(props) {\n        if (this.props.size !== props.size) {\n            this.myP5.remove();\n            this.myP5 = new p5(this.Sketch, this.myRef.current);\n            init(\n                this.props.array,\n                this.props.size,\n                this.props.canvas.height\n            );\n        }\n    }\n    render() {\n        return <div ref={this.myRef} />\n    }\n}\n\nfunction init() {\n    for (let i = 0; i < this.props.size; i++) {\n        this.props.array[i] = Math.floor(Math.random() * (this.props.height - 100 + 1)) + 100;\n    }\n}\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}