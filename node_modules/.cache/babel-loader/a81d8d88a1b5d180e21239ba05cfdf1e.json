{"ast":null,"code":"var _jsxFileName = \"/home/nman/Documents/v5.2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Canvas from './components/sketch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let inputValue = parseInt(e.target.value);\n      new Promise(resolve => {\n        this.setState({\n          shapeWidth: inputValue,\n          arraySize: Math.floor(this.canvas.width / inputValue)\n        });\n        this.array.length = Math.floor(this.canvas.width / inputValue);\n      });\n    };\n\n    this.handleDelayChange = e => {\n      this.setState({\n        msDelay: parseInt(e.target.value)\n      });\n    };\n\n    this.canvas = {\n      width: 1280,\n      height: 480\n    };\n    this.state = {\n      arraySize: 0,\n      shapeWidth: 0,\n      msDelay: 0\n    };\n    this.array = [];\n    this.colorState = [];\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Canvas, {\n        array: this.array,\n        size: this.arraySize,\n        canvas: this.canvas,\n        shapeWidth: this.shapeWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 1,\n        max: 30,\n        value: this.state.shapeWidth,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nman/Documents/v5.2/src/App.js"],"names":["React","Component","Canvas","App","constructor","props","handleChange","e","inputValue","parseInt","target","value","Promise","resolve","setState","shapeWidth","arraySize","Math","floor","canvas","width","array","length","handleDelayChange","msDelay","height","state","colorState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,YAfmB,GAeHC,CAAD,IAAO;AACpB,UAAIC,UAAU,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAzB;AAEA,UAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrB,aAAKC,QAAL,CAAc;AACZC,UAAAA,UAAU,EAAEP,UADA;AAEZQ,UAAAA,SAAS,EAAEC,IAAI,CAACC,KAAL,CAAW,KAAKC,MAAL,CAAYC,KAAZ,GAAoBZ,UAA/B;AAFC,SAAd;AAIA,aAAKa,KAAL,CAAWC,MAAX,GAAoBL,IAAI,CAACC,KAAL,CAAW,KAAKC,MAAL,CAAYC,KAAZ,GAAoBZ,UAA/B,CAApB;AACD,OAND;AAOD,KAzBkB;;AAAA,SA2BnBe,iBA3BmB,GA2BEhB,CAAD,IAAO;AACzB,WAAKO,QAAL,CAAc;AACZU,QAAAA,OAAO,EAAEf,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV;AADL,OAAd;AAGD,KA/BkB;;AAEjB,SAAKQ,MAAL,GAAc;AACZC,MAAAA,KAAK,EAAE,IADK;AAEZK,MAAAA,MAAM,EAAE;AAFI,KAAd;AAIA,SAAKC,KAAL,GAAa;AACXV,MAAAA,SAAS,EAAE,CADA;AAEXD,MAAAA,UAAU,EAAE,CAFD;AAGXS,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKA,SAAKH,KAAL,GAAa,EAAb;AACA,SAAKM,UAAL,GAAkB,EAAlB;AACD;;AAmBDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAKP,KADd;AAEE,QAAA,IAAI,EAAE,KAAKL,SAFb;AAGE,QAAA,MAAM,EAAE,KAAKG,MAHf;AAIE,QAAA,UAAU,EAAE,KAAKJ;AAJnB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,GAAG,EAAE,CAFP;AAGE,QAAA,GAAG,EAAE,EAHP;AAIE,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWX,UAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKT;AALjB;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAnDyB;;AAsD5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Canvas from './components/sketch';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = {\n      width: 1280,\n      height: 480\n    }\n    this.state = {\n      arraySize: 0,\n      shapeWidth: 0,\n      msDelay: 0\n    }\n    this.array = [];\n    this.colorState = [];\n  }\n\n  handleChange = (e) => {\n    let inputValue = parseInt(e.target.value);\n\n    new Promise(resolve => {\n      this.setState({\n        shapeWidth: inputValue,\n        arraySize: Math.floor(this.canvas.width / inputValue)\n      });\n      this.array.length = Math.floor(this.canvas.width / inputValue);\n    })\n  }\n\n  handleDelayChange = (e) => {\n    this.setState({\n      msDelay: parseInt(e.target.value)\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Canvas\n          array={this.array}\n          size={this.arraySize}\n          canvas={this.canvas}\n          shapeWidth={this.shapeWidth}\n        />\n        <input\n          type=\"range\"\n          min={1}\n          max={30}\n          value={this.state.shapeWidth}\n          onChange={this.handleChange}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}