{"ast":null,"code":"var _jsxFileName = \"/home/nman/Documents/v5.2/src/components/sketch.jsx\";\nimport React, { Component } from 'react';\nimport p5 from 'p5';\nimport { init } from '../utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.Sketch = p => {\n      p.setup = () => {\n        p.createCanvas(this.props.canvas.width, this.props.canvas.height);\n      };\n\n      const GREEN = '#4ce600';\n      const RED = '#FF4500';\n      const WHITE = 255;\n      const BLACK = 0;\n\n      p.draw = () => {\n        p.background(WHITE);\n\n        for (var i = 0; i < this.props.size; i++) {\n          if (this.props.colors[i] === 1) p.fill(RED);else if (this.props.colors[i] === 2) p.fill(GREEN);else p.fill(BLACK);\n          p.rect(i * this.props.shapeWidth, this.props.canvas.height - this.props.array[i], this.props.shapeWidth, this.props.array[i]);\n        }\n      };\n    };\n\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n    init(this.props.array, this.props.colors, this.props.size, this.props.canvas.height);\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.props.shapeWidth !== props.shapeWidth) {\n      this.myP5.remove();\n      init(props.array, props.colors, props.size, this.props.canvas.height);\n      this.myP5 = new p5(this.Sketch, this.myRef.current);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.myRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 18\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/home/nman/Documents/v5.2/src/components/sketch.jsx"],"names":["React","Component","p5","init","Canvas","constructor","props","Sketch","p","setup","createCanvas","canvas","width","height","GREEN","RED","WHITE","BLACK","draw","background","i","size","colors","fill","rect","shapeWidth","array","myRef","createRef","componentDidMount","myP5","current","componentWillReceiveProps","remove","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,IAAT,QAAqB,cAArB;;;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAInBC,MAJmB,GAITC,CAAD,IAAO;AACZA,MAAAA,CAAC,CAACC,KAAF,GAAU,MAAM;AACZD,QAAAA,CAAC,CAACE,YAAF,CAAe,KAAKJ,KAAL,CAAWK,MAAX,CAAkBC,KAAjC,EAAwC,KAAKN,KAAL,CAAWK,MAAX,CAAkBE,MAA1D;AACH,OAFD;;AAGA,YAAMC,KAAK,GAAG,SAAd;AACA,YAAMC,GAAG,GAAG,SAAZ;AACA,YAAMC,KAAK,GAAG,GAAd;AACA,YAAMC,KAAK,GAAG,CAAd;;AAEAT,MAAAA,CAAC,CAACU,IAAF,GAAS,MAAM;AACXV,QAAAA,CAAC,CAACW,UAAF,CAAaH,KAAb;;AACA,aAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,KAAL,CAAWe,IAA/B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,cAAI,KAAKd,KAAL,CAAWgB,MAAX,CAAkBF,CAAlB,MAAyB,CAA7B,EACIZ,CAAC,CAACe,IAAF,CAAOR,GAAP,EADJ,KAEK,IAAI,KAAKT,KAAL,CAAWgB,MAAX,CAAkBF,CAAlB,MAAyB,CAA7B,EACDZ,CAAC,CAACe,IAAF,CAAOT,KAAP,EADC,KAGDN,CAAC,CAACe,IAAF,CAAON,KAAP;AACJT,UAAAA,CAAC,CAACgB,IAAF,CAAOJ,CAAC,GAAG,KAAKd,KAAL,CAAWmB,UAAtB,EACI,KAAKnB,KAAL,CAAWK,MAAX,CAAkBE,MAAlB,GAA2B,KAAKP,KAAL,CAAWoB,KAAX,CAAiBN,CAAjB,CAD/B,EAEI,KAAKd,KAAL,CAAWmB,UAFf,EAE2B,KAAKnB,KAAL,CAAWoB,KAAX,CAAiBN,CAAjB,CAF3B;AAIH;AACJ,OAdD;AAeH,KA5BkB;;AAEf,SAAKO,KAAL,gBAAa3B,KAAK,CAAC4B,SAAN,EAAb;AACH;;AA2BDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,IAAL,GAAY,IAAI5B,EAAJ,CAAO,KAAKK,MAAZ,EAAoB,KAAKoB,KAAL,CAAWI,OAA/B,CAAZ;AACQ5B,IAAAA,IAAI,CACR,KAAKG,KAAL,CAAWoB,KADH,EAER,KAAKpB,KAAL,CAAWgB,MAFH,EAGR,KAAKhB,KAAL,CAAWe,IAHH,EAIR,KAAKf,KAAL,CAAWK,MAAX,CAAkBE,MAJV,CAAJ;AAMX;;AACDmB,EAAAA,yBAAyB,CAAC1B,KAAD,EAAQ;AAC7B,QAAI,KAAKA,KAAL,CAAWmB,UAAX,KAA0BnB,KAAK,CAACmB,UAApC,EAAgD;AAC5C,WAAKK,IAAL,CAAUG,MAAV;AACA9B,MAAAA,IAAI,CACAG,KAAK,CAACoB,KADN,EAEApB,KAAK,CAACgB,MAFN,EAGAhB,KAAK,CAACe,IAHN,EAIA,KAAKf,KAAL,CAAWK,MAAX,CAAkBE,MAJlB,CAAJ;AAMA,WAAKiB,IAAL,GAAY,IAAI5B,EAAJ,CAAO,KAAKK,MAAZ,EAAoB,KAAKoB,KAAL,CAAWI,OAA/B,CAAZ;AACH;AACJ;;AACDG,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,6BAAE;AAAK,QAAA,GAAG,EAAE,KAAKP;AAAf;AAAA;AAAA;AAAA;AAAA;AAAF,qBAAP;AACH;;AAtD0B;;AAyD/B,eAAevB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport p5 from 'p5';\nimport { init } from '../utilities';\n\nclass Canvas extends Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n    Sketch = (p) => {\n        p.setup = () => {\n            p.createCanvas(this.props.canvas.width, this.props.canvas.height);\n        }\n        const GREEN = '#4ce600';\n        const RED = '#FF4500';\n        const WHITE = 255;\n        const BLACK = 0;\n\n        p.draw = () => {\n            p.background(WHITE);\n            for (var i = 0; i < this.props.size; i++) {\n                if (this.props.colors[i] === 1)\n                    p.fill(RED);\n                else if (this.props.colors[i] === 2)\n                    p.fill(GREEN);\n                else\n                    p.fill(BLACK);\n                p.rect(i * this.props.shapeWidth,\n                    this.props.canvas.height - this.props.array[i],\n                    this.props.shapeWidth, this.props.array[i]\n                );\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.myP5 = new p5(this.Sketch, this.myRef.current);\n                init(\n            this.props.array,\n            this.props.colors,\n            this.props.size,\n            this.props.canvas.height,\n        );\n    }\n    componentWillReceiveProps(props) {\n        if (this.props.shapeWidth !== props.shapeWidth) {\n            this.myP5.remove();\n            init(\n                props.array,\n                props.colors,\n                props.size,\n                this.props.canvas.height,\n            );\n            this.myP5 = new p5(this.Sketch, this.myRef.current);\n        }\n    }\n    render() {\n        return <><div ref={this.myRef} /></>\n    }\n}\n\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}