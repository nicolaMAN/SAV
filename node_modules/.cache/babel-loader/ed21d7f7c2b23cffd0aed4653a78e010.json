{"ast":null,"code":"var _jsxFileName = \"/home/nman/Documents/v5.2/src/components/sketch.jsx\";\nimport React, { Component } from 'react';\nimport p5 from 'p5';\nimport { init } from './utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.Sketch = p => {\n      p.setup = () => {\n        p.createCanvas(this.props.canvas.width, this.props.canvas.height);\n      };\n\n      const GREEN = '#4ce600';\n      const RED = '#FF4500';\n      const WHITE = 255;\n      const BLACK = 0;\n\n      p.draw = () => {\n        p.noCanvas();\n        p.background(WHITE);\n\n        for (var i = 0; i < this.props.size; i++) {\n          this.props.stroke ? p.stroke(WHITE) : p.noStroke();\n          if (this.props.colors[i] === 1) p.fill(RED);else if (this.props.colors[i] === 2) p.fill(GREEN);else p.fill(BLACK);\n          p.rect(i * this.props.shapeWidth, this.props.canvas.height - this.props.array[i], this.props.shapeWidth, this.props.array[i]);\n        }\n      };\n    };\n\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    init(this.props.array, this.props.colors, this.props.size, this.props.canvas.height);\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.shapeWidth !== this.props.shapeWidth) {\n      this.myP5.remove();\n      init(newProps.array, newProps.colors, newProps.size, newProps.canvas.height);\n      this.myP5 = new p5(this.Sketch, this.myRef.current);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.myRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/home/nman/Documents/v5.2/src/components/sketch.jsx"],"names":["React","Component","p5","init","Canvas","constructor","props","Sketch","p","setup","createCanvas","canvas","width","height","GREEN","RED","WHITE","BLACK","draw","noCanvas","background","i","size","stroke","noStroke","colors","fill","rect","shapeWidth","array","myRef","createRef","componentDidMount","myP5","current","componentWillReceiveProps","newProps","remove","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport p5 from 'p5';\nimport { init } from './utilities';\n\nclass Canvas extends Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    Sketch = (p) => {\n        p.setup = () => {\n            p.createCanvas(this.props.canvas.width, this.props.canvas.height);\n\n        }\n        \n        const GREEN = '#4ce600';\n        const RED = '#FF4500';\n        const WHITE = 255;\n        const BLACK = 0;\n\n        p.draw = () => {\n            p.noCanvas();\n            p.background(WHITE);\n            for (var i = 0; i < this.props.size; i++) {\n                this.props.stroke ? p.stroke(WHITE) : p.noStroke();\n                if (this.props.colors[i] === 1)\n                    p.fill(RED);\n                else if (this.props.colors[i] === 2)\n                    p.fill(GREEN);\n                else\n                    p.fill(BLACK);\n                p.rect(i * this.props.shapeWidth,\n                    this.props.canvas.height - this.props.array[i],\n                    this.props.shapeWidth, this.props.array[i]\n                );\n            }\n        }\n    }\n\n    componentDidMount() {\n        init(\n            this.props.array,\n            this.props.colors,\n            this.props.size,\n            this.props.canvas.height,\n        );\n        this.myP5 = new p5(this.Sketch, this.myRef.current);\n    }\n    componentWillReceiveProps(newProps) {\n        if (newProps.shapeWidth !== this.props.shapeWidth ) {\n            this.myP5.remove();\n            init(\n                newProps.array,\n                newProps.colors,\n                newProps.size,\n                newProps.canvas.height,\n            );\n            this.myP5 = new p5(this.Sketch, this.myRef.current);\n        }\n    }\n    render() {\n        return <div ref={this.myRef} />\n    }\n}\n\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}