{"ast":null,"code":"import { stop, swap } from \"../utilities\";\nimport { isArrayReset } from \"../components/buttonSet\";\nexport default async function cocktail(values, size, ms, paused) {\n  let swapped = true;\n  let start = 0;\n  let end = size - 1;\n\n  while (swapped) {\n    swapped = false;\n\n    for (let i = start; i < end; ++i) {\n      if (values[i] > values[i + 1]) {\n        if (isArrayReset) return;\n        await stop();\n        await swap(values, i, i + 1, ms);\n        swapped = true;\n      }\n    }\n\n    if (!swapped) break;\n    swapped = false;\n    end -= 1;\n\n    for (let i = end - 1; i >= start; --i) {\n      if (values[i] > values[i + 1]) {\n        if (isArrayReset) return;\n        await stop();\n        await swap(values, i, i + 1, ms);\n        swapped = true;\n      }\n    }\n\n    start += 1;\n  }\n\n  return values;\n}","map":{"version":3,"sources":["/home/nman/Documents/v5.2/src/sorting-algorithms/cocktail.js"],"names":["stop","swap","isArrayReset","cocktail","values","size","ms","paused","swapped","start","end","i"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,cAA3B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAEA,eAAe,eAAeC,QAAf,CAAwBC,MAAxB,EAAgCC,IAAhC,EAAsCC,EAAtC,EAA0CC,MAA1C,EAAkD;AAC7D,MAAIC,OAAO,GAAG,IAAd;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,GAAG,GAAGL,IAAI,GAAG,CAAjB;;AACA,SAAOG,OAAP,EAAgB;AACZA,IAAAA,OAAO,GAAG,KAAV;;AACA,SAAK,IAAIG,CAAC,GAAGF,KAAb,EAAoBE,CAAC,GAAGD,GAAxB,EAA6B,EAAEC,CAA/B,EAAkC;AAC9B,UAAIP,MAAM,CAACO,CAAD,CAAN,GAAYP,MAAM,CAACO,CAAC,GAAG,CAAL,CAAtB,EAA+B;AAC3B,YAAIT,YAAJ,EACI;AACJ,cAAMF,IAAI,EAAV;AACA,cAAMC,IAAI,CAACG,MAAD,EAASO,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBL,EAAnB,CAAV;AACAE,QAAAA,OAAO,GAAG,IAAV;AACH;AACJ;;AACD,QAAI,CAACA,OAAL,EACI;AACJA,IAAAA,OAAO,GAAG,KAAV;AACAE,IAAAA,GAAG,IAAI,CAAP;;AACA,SAAK,IAAIC,CAAC,GAAGD,GAAG,GAAG,CAAnB,EAAsBC,CAAC,IAAIF,KAA3B,EAAkC,EAAEE,CAApC,EAAuC;AACnC,UAAIP,MAAM,CAACO,CAAD,CAAN,GAAYP,MAAM,CAACO,CAAC,GAAG,CAAL,CAAtB,EAA+B;AAC3B,YAAIT,YAAJ,EACI;AACJ,cAAMF,IAAI,EAAV;AACA,cAAMC,IAAI,CAACG,MAAD,EAASO,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBL,EAAnB,CAAV;AACAE,QAAAA,OAAO,GAAG,IAAV;AACH;AACJ;;AACDC,IAAAA,KAAK,IAAI,CAAT;AACH;;AACD,SAAOL,MAAP;AACH","sourcesContent":["import { stop, swap } from \"../utilities\";\nimport { isArrayReset } from \"../components/buttonSet\";\n\nexport default async function cocktail(values, size, ms, paused) {\n    let swapped = true;\n    let start = 0;\n    let end = size - 1;\n    while (swapped) {\n        swapped = false;\n        for (let i = start; i < end; ++i) {\n            if (values[i] > values[i + 1]) {\n                if (isArrayReset)\n                    return;\n                await stop();\n                await swap(values, i, i + 1, ms);\n                swapped = true;\n            }\n        }\n        if (!swapped)\n            break;\n        swapped = false;\n        end -= 1;\n        for (let i = end - 1; i >= start; --i) {\n            if (values[i] > values[i + 1]) {\n                if (isArrayReset)\n                    return;\n                await stop();\n                await swap(values, i, i + 1, ms);\n                swapped = true;\n            }\n        }\n        start += 1;\n    }\n    return values;\n}"]},"metadata":{},"sourceType":"module"}